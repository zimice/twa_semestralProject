@page "/login"
@using Ppt23.Client.Components
@using Ppt.Shared

@inject HttpClient Http
@inject SharedStateService StateService
@inject NavigationManager NavigationManager

<h1 class="text-3xl font-bold mb-4 text-center w-full">Login</h1>

<div class="flex flex-col space-y-4 p-4 max-w-md mx-auto">

    <div class="flex flex-col">
        <label for="username" class="text-lg font-medium text-blue-700">Username:</label>
        <input id="username" class="border-2 border-blue-700 mt-1 p-2 w-full" @bind-value="username" />
    </div>

    <div class="flex flex-col">
        <label for="password" class="text-lg font-medium text-blue-700">Password:</label>
        <input id="password" type="password" class="border-2 border-blue-700 mt-1 p-2 w-full" @bind-value="password" />
    </div>

    <button class="p-2 pl-5 pr-5 bg-blue-500 text-gray-100 text-lg rounded-lg focus:outline-none focus:border-4 border-blue-300 w-full" @onclick="checkUserCredentials">
        Log in
    </button>

    @if (!string.IsNullOrEmpty(loginMessage))
    {
        <div class="mt-4 text-center" style="color:@messageColor">
            @loginMessage
        </div>
    }

</div>


@code {
    string? username;
    string? password;
    string loginMessage = "";
    string messageColor = "green";

    private async Task checkUserCredentials()
    {
        User newUser = new User(username, password);
        HttpResponseMessage response = await Http.PostAsJsonAsync($"login", newUser);
        if (response.IsSuccessStatusCode)
        {
            StateService.SetSharedVariable(true);
            loginMessage = "You have logged in successfully";
            messageColor = "green";

            // Force the UI to update with the success message
            StateHasChanged();

            // Wait for a second
            await Task.Delay(1000);

            // Redirect to the main index page
            NavigationManager.NavigateTo("/");
        }
        else
        {
            loginMessage = "Bad credentials";
            messageColor = "red";
        }
    }
}
